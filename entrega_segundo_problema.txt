Impresion del problema:

Habiendo avanzado con la cursada ahora se que el problema a resolver es un problema del viajante. Es probable que pueda reutilizar mucho del codigo que use para la primera entrega asi que deberia representar mucha menos programacion.



Ideas de como lo voy a resolver:

Sabiendo que es un problema del viajante ahora entiendo algunos supuestos que tome que son incorrectos (o pueden serlos). En principio voy a corregir el modelo para representar eso. Esta es la razon por la que la distancia siempre me daba distinto en mi ejecucion que en la entrega en la pagina. Lo primero que voy a hacer para esto es cerrar el circuito, ya que esta es una propiedad de los problemas del viajante. Luego voy a probar si es correcto asumir que se comienza desde el origen o no haciendo una entrega para corroborar.

Al ahora tratarse de un problema con muchas mas paradas es posible que deba optimizar un poco el codigo para performance para lograr una ejecucion en un tiempo razonable. Lo que es m√°s probable que tenga que hacer es limitar la cantidad de veces que el optimizador itera por las paradas buscando una mejor solucion. Otra cosa que probablemente haga para optimizar el tiempo de ejecucion es correr solo la heuristica que me interesa correr comentando el resto.

Tambien voy a agregar alguna heuristica extra si se me ocurre alguna.



Comentarios en entregas:

- La primera entrega va a ser de prueba con el codigo de la entrega anterior. La corrida esta tardando mucho pero no se cuanto, voy a agregar timestamps y logs para la proxima entrega. Corte la primera ejecucion para agregarlos. Solo voy a correr la solucion greedy sin optimizar para la primera entrega y para agregar los logs.

- La solucion greedy esta tardando 2 minutos 30 segundos, es una duracion un poco larga pero razonable. La optimizacion esta tardando extremadamente mucho estoy pensando en generar un cache para el calculo de las distancias para acortar tiempos. La implementacion del cache fue un fracaso, y estoy comenzando a creer que va a ser imposible usar el optimizador. El supuesto de que comienza y termina en el origen es falso, pruebo cerrando el circuito agregando la distancia entre la parada final y la primera.

- El nuevo supuesto de que el circuito no importa donde comienza pero es cerrado es correcto, mi distancia local es igual a la de la pagina de entrega. Implementado un nuevo optimizador. Agarra los puntos que mas distancia agregan al modelo e intenta reubicarlos. Tiene una condicion de que el punto debe estar cercano al uno de los puntos siguientes para probar la nueva solucion (esto baja el tiempo de ejecucion MUCHO).