Impresion del problema:

El problema es facil de entender y no parece ser excesivamente complejo de resolver. Al ser la primera entrega no estoy seguro de que tan dificil va a ser.



Ideas de como lo voy a resolver:

Lo primero que voy a hacer es intentar resolver el problema con los numeros en orden para tener una idea de cuanto es un numero alto para una solucion.

Luego voy a implementar una solucion utilizando una heuristica greedy. Es decir voy a ir siempre la sucursal mas cercana en el modelo.

Despues voy a implementar una solucion que itere las sucursales y agregue en el camino esperado cada sucursal en donde menos distancia vaya a agregar en orden.

Al final voy a implementar una forma en la que las soluciones puedan ser optimizadas iterativamente.



Comentarios en entregas:

- La solucion greedy tiene un buen puntaje realtivo a las entregas que veo en la pagina del enunciado. Es una buena primera aproximacion.

- La solucion de busqueda de posiciones parece ser peor que la greedy en un principio.

- Arreglado un error de programacion en la solucion de busqueda. Se acerca mas a al greedy pero sigue siendo peor.

- Intento de optimizar soluciones anteriores. Estoy teniendo puntajes mas altos que los anteriores asi que la logica debe tener algun error.

- Arreglo de optimizador y comparador de soluciones para ver cual es la mejor. Voy a intentar mejorar la solucion search porque parece tener un problema.

- Arreglada la logica de la solucion search, no parece haber mejorado mucho la solucion. Me doy cuenta que tome comos supuesto que es indistinto por donde comienzo el recorrido.

- Agrego a la solucion que arranque por el origen para probar si mejora el score. La solucion greedy optimizada sigue siendo la mejor solucion.



Comentarios finales de la entrega:

El problema resulto ser un poco mas complejo de resolver de lo que esperaba. Tambien me di cuenta que habia tomado un supuesto al principio de la solucion sin darme cuenta.
Tengo la sensacion de que la solucion a la que yo llegue es cercana al optimo pero no es optima. Tampoco se me ocurre una forma de algoritmicamente llegar a ese optimo. 
Es posible que investigando un poco mas sobre heuristicas me acerque mas a la solucion real.